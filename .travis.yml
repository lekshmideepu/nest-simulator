
# .travis.yaml
#
# This file is part of NEST.
#
# Copyright (C) 2004 The NEST Initiative
#
# NEST is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# NEST is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NEST.  If not, see <http://www.gnu.org/licenses/>.


# This is the Travis CI top-level script to setup and run the NEST
# build and test environment.

language: python

# Using the Sudo-enabled Ubuntu Trusty (14.04 LTS).
sudo: required
dist: trusty

stages:
   - staticcheck
   - MPI
   - Python3.4.4_full
   - Python2.7.13_full

# list of build stages to run. Stages with the same name get run in parallel.
jobs:
  include:
    - stage: staticcheck
      python: 3.4.4
      env: xTHREADING=0 xMPI=0 xGSL=0 xLIBNEUROSIM=0 xLTDL=0 xREADLINE=0 xPYTHON=0 xMUSIC=0 xSTATIC_ANALYSIS=1 CACHE_NAME=JOB   # static code analysis
    - stage: MPI
      python: 3.4.4
      env: xTHREADING=0 xMPI=1 xGSL=0 xLIBNEUROSIM=0 xLTDL=1 xREADLINE=1 xPYTHON=0 xMUSIC=0 xSTATIC_ANALYSIS=0 CACHE_NAME=JOB   # only MPI
    - stage: MPI
      python: 3.4.4
      env: xTHREADING=1 xMPI=0 xGSL=0 xLIBNEUROSIM=0 xLTDL=1 xREADLINE=1 xPYTHON=0 xMUSIC=0 xSTATIC_ANALYSIS=0 CACHE_NAME=JOB   # only threading 
    - stage: MPI
      python: 3.4.4
      env:  xTHREADING=1 xMPI=0 xGSL=0 xLIBNEUROSIM=0 xLTDL=0 xREADLINE=0 xPYTHON=1 xMUSIC=0 xSTATIC_ANALYSIS=0 CACHE_NAME=JOB  # Python & Threading
    - stage: MPI
      python: 3.4.4
      env: xTHREADING=0 xMPI=1 xGSL=0 xLIBNEUROSIM=0 xLTDL=0 xREADLINE=0 xPYTHON=1 xMUSIC=0 xSTATIC_ANALYSIS=0 CACHE_NAME=JOB   # Python & MPI
    - stage: MPI
      python: 3.4.4
      env: xTHREADING=0 xMPI=0 xGSL=0 xLIBNEUROSIM=0 xLTDL=0 xREADLINE=0 xPYTHON=1 xMUSIC=0 xSTATIC_ANALYSIS=0 CACHE_NAME=JOB   # only Python
    - stage: python3.4.4_full
      python: 3.4.4
      env: xTHREADING=1 xMPI=1 xGSL=1 xLIBNEUROSIM=1 xLTDL=1 xREADLINE=1 xPYTHON=1 xMUSIC=1 xSTATIC_ANALYSIS=0 CACHE_NAME=JOB   # full  
    - stage: python2.7.13_full
      python: 2.7.13
      env: xTHREADING=1 xMPI=1 xGSL=1 xLIBNEUROSIM=1 xLTDL=1 xREADLINE=1 xPYTHON=1 xMUSIC=1 xSTATIC_ANALYSIS=0 CACHE_NAME=JOB   # full

#https://docs.travis-ci.com/user/installing-dependencies#Installing-Packages-with-the-APT-Addon
addons:
   apt:
    sources:
     - r-packages-trusty
     - ubuntu-toolchain-r-test
    packages:
     - build-essential
     - cmake
     - libltdl-dev
     - libreadline6-dev
     - libncurses5-dev
     - libgsl0-dev
     - python-all-dev
     - python-numpy
     - ipython
     - pkg-config
     - openmpi-bin
     - libopenmpi-dev
     - python-nose
     - libpcre3
     - libpcre3-dev
     - llvm-3.6-dev
     - jq
     - pep8
     - libboost-filesystem-dev
     - libboost-regex-dev
     - libboost-wave-dev
     - libboost-python-dev
     - libboost-program-options-dev
     - libboost-test-dev
     - python-mpi4py
cache:
   directory:
     - $HOME/.cache

before_install:
     - echo "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +"
     - echo "+         P R E P A R E   N E S T   B U I L D   E N V I R O N M E N T         +"
     - echo "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +"
     - export SOURCEDIR=$PWD
     - echo $PWD
     - ls $PWD
     - cp extras/install_music.sh extras/install_csa-libneurosim.sh $HOME
     - cd $HOME/build
     - echo $PATH
   # Upgrade pip and setuptools
     - pip install -U pip
     - pip install -U setuptools
  
   # Installing additional packages using pip as they only have
   # outdated versions in the Travis package whitelist.
   # terminaltables is required by parse_travis_log.py to create
   # the build summary.
     - pip install cython scipy matplotlib terminaltables

install:
   - which cython
   - cython --version
   - which python
   - python --version
   - which pip
   - which nosetests
   - nosetests --version
   - nosetests --plugins
   - which cmake
   - cmake --version
   - if [ "$CXX" = "g++" ]; then export CXX="g++-8" CC="gcc-8"; ${CXX} --version; fi
   - if [ "$CXX" = "clang++" ]; then export CXX="clang++-7" CC="clang-7"; ${CXX} --version; fi
   - echo ${CC}
   - echo ${CXX}
  
before_script:
   # Change directory back to the NEST source code directory.
   - cd $SOURCEDIR
   - chmod +x extras/travis_build.sh
script:
   - set -o pipefail
   - export CXXFLAGS=${CI_CXX_FLAGS}
   - ./extras/travis_build.sh 2>&1 | tee travis_build.sh.log
   - python extras/parse_travis_log.py travis_build.sh.log

before_deploy:
   - cd $TRAVIS_BUILD_DIR/build
   - tar -zcvf reports.tar.gz ./reports
   - tar -zcvf docs.tar.gz $TRAVIS_BUILD_DIR/result/share/doc/nest/*.*
   - mkdir -p $TRAVIS_BUILD_DIR/build/artefacts_upload
   - mv docs.tar.gz $TRAVIS_BUILD_DIR/build/artefacts_upload
   - mv reports.tar.gz $TRAVIS_BUILD_DIR/build/artefacts_upload

# S3 Deployment (Uploading the Travis CI build artefacts to Amazon S3).
deploy:
  provider: s3
  access_key_id:
    secure: $ARTIFACTS_KEY
  secret_access_key:
    secure: $ARTIFACTS_SECRET
  bucket: "nest-travis-artefacts"
  region: eu-central-1
  skip_cleanup: true
  on:
    repo: nest/nest-simulator
    branch: master
  local-dir: "$TRAVIS_BUILD_DIR/build/artefacts_upload"
  upload-dir: "$TRAVIS_REPO_SLUG/$TRAVIS_BUILD_NUMBER/$TRAVIS_JOB_NUMBER"
  acl: bucket_owner_full_control

